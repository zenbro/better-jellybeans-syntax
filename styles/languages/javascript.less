.syntax--js {
  .syntax--storage {
    &.syntax--type {
      color: @syntax-color-definition;

      &.syntax--class {
        color: @syntax-color-class;

        &.syntax--jsdoc {
          color: @syntax-color-variable;
          font-style: normal;
        }
      }

      &.syntax--class.syntax--jsdoc {
      }
    }
  }

  .syntax--decorator {
    &.syntax--variable.syntax--other,
    &.syntax--keyword.syntax--operator {
      color: @constant;
    }
  }

  .syntax--support.syntax--variable.syntax--dom,
  .syntax--support.syntax--type.syntax--object.syntax--dom,
  .syntax--variable.syntax--language.syntax--self,
  .syntax--variable.syntax--language.syntax--this {
    color: @syntax-color-constant;
  }
  &.syntax--variable.syntax--language.syntax--prototype,
  &.syntax--variable.syntax--language.syntax--proto {
    color: @storage-class;
  }

  &.syntax--string.syntax--regexp {
    .syntax--punctuation.syntax--definition.syntax--string {
      color: @ruby-regexp-delimiter;
    }
  }

  &.syntax--punctuation.syntax--definition.syntax--quasi {
    >.syntax--string.syntax--quoted.syntax--template {
      color: @string-delimiter;
    }
  }

  &.syntax--punctuation.syntax--quasi.syntax--element {
    color: @syntax-color-variable;
  }

  &.syntax--variable.syntax--other.syntax--shorthandpropertyname,
  &.syntax--variable.syntax--other.syntax--property {
    color: @syntax-color-symbol;
  }

  &.syntax--constant.syntax--other.syntax--object.syntax--key {
    color: @syntax-color-symbol;
    >.syntax--string.syntax--unquoted {
      color: @syntax-color-symbol;
    }
  }

  .syntax--keyword {
    &.syntax--operator {
      color: @syntax-color-import;

      &.syntax--comparison,
      &.syntax--logical,
      &.syntax--arithmetic,
      &.syntax--accessor,
      &.syntax--relational,
      &.syntax--assignment {
        color: inherit;
      }
      &.syntax--regexp {
        color: lighten(@ruby-regexp, 25%);
      }

      &.syntax--bitwise {
        color: darken(@syntax-color-constant, 15%);
      }

      &.syntax--ternary {
        color: @syntax-color-control;
      }
    }
    &.syntax--control {
      &.syntax--anchor.syntax--regexp {
        color: lighten(@ruby-regexp, 25%);
      }
      &.syntax--module {
        color: @syntax-color-import;
      }
    }
  }
}
